@using SpotifyAPI.Web
@using System.Text.RegularExpressions
@{
    ViewData["Title"] = "Track";
}
@model IndexLetterViewModel

<h1>Les artistes par classement alphabétique</h1>

<div class="pagination">
    @foreach (var p in Model.PaginationLetters)
    {
        <a class="@(p.IsActive ? "page-link active" : "page-link")" href="@Url.RouteUrl("IndexLetter", new { letter = p.Slug })">@p.Label</a>
    }
</div>

<ul class="artist-list-detailed">
    @foreach (var item in Model.Artists)
    {
        <li>
            @if (item.Images != null && item.Images.Count > 0)
            {
                var image = item.Images.Last();

                <img src="@image.Url" class="artist-pic">
            }
            <div>
                <p class="big"><a href="@Url.RouteUrl("Artist", new { id = item.Id })">@item.Name</a></p>

                <ul class="albums-list">
                    @foreach (var album in item.Albums.OrderByDescending(a => a.ReleaseDate).Where(a => a.AlbumGroup != "appears_on" && a.AlbumGroup != "single").DistinctBy(a => a.Name))
                    {
                        <li>
                            <p><a href="@Url.RouteUrl("Album", new { idArtist = item.Id, idAlbum = album.Id })">@album.Name</a> - @album.TotalTracks <i class="fa-solid fa-compact-disc"></i></p>
                        </li>
                    }
                </ul>
            </div>
        </li>
    }
</ul>

<div class="pagination">
    @foreach (var p in Model.PaginationLetters)
    {
        <a class="@(p.IsActive ? "page-link active" : "page-link")" href="@Url.RouteUrl("IndexLetter", new { letter = p.Slug })">@p.Label</a>
    }
</div>

@section Styles{
    <link rel="stylesheet" href="~/css/index-letters.css" asp-append-version="true" />
}
